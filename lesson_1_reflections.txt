How did viewing a diff between two versions of a file help you see the bug that was introduced?

It hides all the redundant code and helps focusing the attention in the important parts (the changes between files).

How could having easy access to the entire history of a file make you a more efficient programmer in the long term?

Saving time when I find errors on old code.

What do you think are the pros and cons of manually choosing when to create a commit, like you do in Git, vs having versions automatically saved, like Google Docs does?

Pros: Every commit has a logical meaning, all commits are fully working and are part of a conceptual unit.

Cons: If there is a power fall important work could be lost, maybe, when working with others, there are more appropiate time slots to compaginate work when two changes are not compatible.

Why do you think some version control systems, like Git, allow saving multiple files in one commit, while others, like Google Docs, treat each file separately?

Because Git is design to work with code, wich is more likely to have dependencies among files. In the other hand, Google Docs is intended to work with Documents, which are more likely to be independent units.

How can you use the commands git log and git diff to view the history of files?

Git log allows me to see the id, author, date and comment of my project in a given repository. Git diff shows me the differences between two commits (added and deleted lines).

How might using version control make you more confident to make changes that could break something?

Giving me the assurance that I can undo any change that I make.

Now that you have your workspace set up, what do you want to try using Git for?

For all the projects at work.